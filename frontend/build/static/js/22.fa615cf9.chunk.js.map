{"version":3,"file":"static/js/22.fa615cf9.chunk.js","mappings":"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","sources":["components/cms/CoworkingPageBuilder.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useTenant } from '../../contexts/TenantContext';\nimport api from '../../services/api';\nimport {\n  Plus,\n  Move,\n  Edit,\n  Trash2,\n  Eye,\n  Settings,\n  Palette,\n  Layout,\n  Type,\n  Image as ImageIcon,\n  Users,\n  Calendar,\n  Star,\n  Target,\n  BarChart3,\n  Save,\n  RefreshCw\n} from 'lucide-react';\n\nconst CoworkingPageBuilder = ({ pageId, initialBlocks = [] }) => {\n  const { getColorScheme, translateTerm } = useTenant();\n  const [blocks, setBlocks] = useState([]);\n  const [availableBlocks, setAvailableBlocks] = useState([]);\n  const [selectedTheme, setSelectedTheme] = useState(null);\n  const [availableThemes, setAvailableThemes] = useState([]);\n  const [pageTemplates, setPageTemplates] = useState([]);\n  const [editingBlock, setEditingBlock] = useState(null);\n  const [previewMode, setPreviewMode] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const colorScheme = getColorScheme();\n\n  // Block icons mapping\n  const blockIcons = {\n    'coworking_hero': Target,\n    'membership_pricing': BarChart3,\n    'member_testimonials': Star,\n    'space_gallery': ImageIcon,\n    'community_events': Calendar,\n    'amenities_grid': Layout,\n    'community_stats': Users,\n    'cta_membership': Target\n  };\n\n  // Load all data on component mount\n  useEffect(() => {\n    loadAllData();\n  }, [pageId]);\n\n  const loadAllData = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      await Promise.all([\n        loadAvailableBlocks(),\n        loadAvailableThemes(),\n        loadPageTemplates(),\n        loadExistingPageData()\n      ]);\n    } catch (err) {\n      console.error('Failed to load CMS data:', err);\n      setError('Failed to load page builder data. Please refresh and try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadAvailableBlocks = async () => {\n    try {\n      const response = await api.get('/cms/coworking/blocks');\n      const blocks = response.data.blocks || response.data;\n      setAvailableBlocks(Array.isArray(blocks) ? blocks : []);\n    } catch (error) {\n      console.error('Failed to load blocks:', error);\n      throw error;\n    }\n  };\n\n  const loadAvailableThemes = async () => {\n    try {\n      const response = await api.get('/cms/coworking/themes');\n      const themes = response.data.themes || response.data;\n      const themesArray = Array.isArray(themes) ? themes : [];\n      setAvailableThemes(themesArray);\n      \n      if (themesArray.length > 0 && !selectedTheme) {\n        setSelectedTheme(themesArray[0]);\n      }\n    } catch (error) {\n      console.error('Failed to load themes:', error);\n      throw error;\n    }\n  };\n\n  const loadPageTemplates = async () => {\n    try {\n      const response = await api.get('/cms/coworking/page-templates');\n      const templates = response.data.templates || response.data;\n      setPageTemplates(Array.isArray(templates) ? templates : []);\n    } catch (error) {\n      console.error('Failed to load templates:', error);\n      throw error;\n    }\n  };\n\n  const loadExistingPageData = async () => {\n    if (!pageId) return;\n    \n    try {\n      const response = await api.get(`/cms/pages/${pageId}/builder`);\n      const pageData = response.data;\n      \n      if (pageData && pageData.blocks) {\n        setBlocks(pageData.blocks);\n      }\n    } catch (error) {\n      // If no builder data exists yet, that's fine - start with empty blocks\n      console.log('No existing page builder data found');\n    }\n  };\n\n  // Drag and drop handlers\n  const handleDragEnd = (result) => {\n    if (!result.destination) return;\n\n    if (result.source.droppableId === 'available-blocks' && result.destination.droppableId === 'page-blocks') {\n      // Adding new block to page\n      const blockType = availableBlocks[result.source.index];\n      const newBlock = {\n        id: `block_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        type: blockType.id,\n        config: getDefaultBlockConfig(blockType),\n        order: result.destination.index\n      };\n      \n      const newBlocks = [...blocks];\n      newBlocks.splice(result.destination.index, 0, newBlock);\n      setBlocks(newBlocks);\n    } else if (result.source.droppableId === 'page-blocks' && result.destination.droppableId === 'page-blocks') {\n      // Reordering blocks\n      const newBlocks = Array.from(blocks);\n      const [reorderedBlock] = newBlocks.splice(result.source.index, 1);\n      newBlocks.splice(result.destination.index, 0, reorderedBlock);\n      setBlocks(newBlocks);\n    }\n  };\n\n  const getDefaultBlockConfig = (blockType) => {\n    if (!blockType || !blockType.customizable_fields) return {};\n    \n    const config = {};\n    blockType.customizable_fields.forEach(field => {\n      config[field.field] = field.default || '';\n    });\n    return config;\n  };\n\n  // Block management\n  const removeBlock = (blockId) => {\n    setBlocks(blocks.filter(block => block.id !== blockId));\n  };\n\n  const editBlock = (block) => {\n    setEditingBlock(block);\n  };\n\n  const saveBlockConfig = (blockId, newConfig) => {\n    setBlocks(blocks.map(block => \n      block.id === blockId \n        ? { ...block, config: newConfig }\n        : block\n    ));\n    setEditingBlock(null);\n  };\n\n  // Apply template\n  const applyTemplate = (template) => {\n    const templateBlocks = template.blocks.map((templateBlock, index) => ({\n      id: `block_${Date.now()}_${index}_${Math.random().toString(36).substr(2, 9)}`,\n      type: templateBlock.type,\n      config: templateBlock.config || getDefaultBlockConfig(\n        availableBlocks.find(b => b.id === templateBlock.type)\n      ),\n      order: templateBlock.order || index\n    }));\n    \n    setBlocks(templateBlocks);\n  };\n\n  // Save page\n  const savePage = async () => {\n    setSaving(true);\n    try {\n      await api.post(`/cms/pages/${pageId}/builder`, {\n        blocks: blocks,\n        theme: selectedTheme\n      });\n      \n      // Show success message (you could use a toast library here)\n      alert('Page saved successfully!');\n    } catch (error) {\n      console.error('Failed to save page:', error);\n      alert('Failed to save page. Please try again.');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-96\">\n        <div className=\"text-center\">\n          <RefreshCw className=\"h-8 w-8 animate-spin mx-auto mb-4\" style={{ color: colorScheme.primary }} />\n          <p className=\"text-gray-600\">Loading page builder...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center h-96\">\n        <div className=\"text-center\">\n          <p className=\"text-red-600 mb-4\">{error}</p>\n          <button\n            onClick={loadAllData}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"coworking-page-builder min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white border-b border-gray-200 px-6 py-4\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold\" style={{ color: colorScheme.text }}>\n              {translateTerm('Page Builder')}\n            </h1>\n            <p className=\"text-gray-600 mt-1\">Create beautiful coworking space pages</p>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <button\n              onClick={() => setPreviewMode(!previewMode)}\n              className=\"flex items-center px-4 py-2 text-gray-600 hover:text-gray-900 border border-gray-300 rounded-lg\"\n            >\n              <Eye className=\"h-4 w-4 mr-2\" />\n              {previewMode ? 'Edit' : 'Preview'}\n            </button>\n            <button\n              onClick={savePage}\n              disabled={saving}\n              className=\"flex items-center px-6 py-2 text-white rounded-lg font-medium disabled:opacity-50\"\n              style={{ backgroundColor: colorScheme.primary }}\n            >\n              <Save className=\"h-4 w-4 mr-2\" />\n              {saving ? 'Saving...' : 'Save Page'}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex h-full\">\n        {!previewMode && (\n          <>\n            {/* Sidebar - Available Blocks */}\n            <div className=\"w-80 bg-white border-r border-gray-200 p-6 overflow-y-auto\">\n              {/* Page Templates */}\n              {pageTemplates.length > 0 && (\n                <div className=\"mb-8\">\n                  <h3 className=\"text-lg font-semibold mb-4\" style={{ color: colorScheme.text }}>\n                    Quick Start Templates\n                  </h3>\n                  <div className=\"space-y-2\">\n                    {pageTemplates.map((template) => (\n                      <button\n                        key={template.id}\n                        onClick={() => applyTemplate(template)}\n                        className=\"w-full p-3 text-left border border-gray-200 rounded-lg hover:bg-gray-50 hover:border-gray-300\"\n                      >\n                        <h4 className=\"font-medium text-gray-900\">{template.name}</h4>\n                        <p className=\"text-sm text-gray-600\">{template.description}</p>\n                        <p className=\"text-xs text-gray-500 mt-1\">\n                          {template.blocks?.length || 0} blocks\n                        </p>\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Content Blocks */}\n              <h3 className=\"text-lg font-semibold mb-4\" style={{ color: colorScheme.text }}>\n                Content Blocks\n              </h3>\n              \n              {/* Temporarily disable drag-and-drop to fix React context issue */}\n              <div className=\"space-y-3\">\n                {availableBlocks.map((block, index) => {\n                  const IconComponent = blockIcons[block.id] || Layout;\n                  return (\n                    <div\n                      key={block.id}\n                      onClick={() => {\n                        // Add block to canvas when clicked\n                        const newBlock = {\n                          id: `block_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n                          type: block.id,\n                          config: getDefaultBlockConfig(block),\n                          order: blocks.length\n                        };\n                        setBlocks([...blocks, newBlock]);\n                      }}\n                      className=\"p-4 border border-gray-200 rounded-lg cursor-pointer hover:shadow-md transition-shadow hover:bg-gray-50\"\n                    >\n                      <div className=\"flex items-center space-x-3\">\n                        <IconComponent className=\"h-5 w-5\" style={{ color: colorScheme.primary }} />\n                        <div>\n                          <h4 className=\"font-medium text-gray-900\">{block.name}</h4>\n                          <p className=\"text-sm text-gray-600\">{block.description}</p>\n                          <p className=\"text-xs text-blue-600 mt-1\">Click to add to page</p>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n\n              {/* Theme Selector */}\n              {availableThemes.length > 0 && (\n                <div className=\"mt-8\">\n                  <h3 className=\"text-lg font-semibold mb-4\" style={{ color: colorScheme.text }}>\n                    Theme\n                  </h3>\n                  <div className=\"space-y-3\">\n                    {availableThemes.map((theme) => (\n                      <div\n                        key={theme.id}\n                        onClick={() => setSelectedTheme(theme)}\n                        className={`p-3 border rounded-lg cursor-pointer transition-all ${\n                          selectedTheme?.id === theme.id\n                            ? 'border-blue-500 bg-blue-50'\n                            : 'border-gray-200 hover:border-gray-300'\n                        }`}\n                      >\n                        <div className=\"flex items-center space-x-3\">\n                          <Palette className=\"h-4 w-4\" />\n                          <div>\n                            <h4 className=\"font-medium\">{theme.name}</h4>\n                            <p className=\"text-sm text-gray-600\">{theme.description}</p>\n                          </div>\n                        </div>\n                        {theme.color_schemes && (\n                          <div className=\"flex space-x-2 mt-2\">\n                            {theme.color_schemes.slice(0, 3).map((colorScheme, idx) => (\n                              <div\n                                key={idx}\n                                className=\"w-4 h-4 rounded-full border border-gray-300\"\n                                style={{ backgroundColor: colorScheme.primary }}\n                              />\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Main Canvas - Simplified without drag-and-drop */}\n            <div className=\"flex-1 p-6\">\n              <div className=\"min-h-96 space-y-4\">\n                {blocks.length === 0 && (\n                  <div className=\"text-center py-12 border-2 border-dashed border-gray-300 rounded-lg\">\n                    <Layout className=\"h-12 w-12 mx-auto text-gray-400 mb-4\" />\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                      Start Building Your Page\n                    </h3>\n                    <p className=\"text-gray-600 mb-4\">\n                      Click content blocks from the sidebar to add them to your coworking space website\n                    </p>\n                    {pageTemplates.length > 0 && (\n                      <p className=\"text-sm text-gray-500\">\n                        Or choose a template to get started quickly\n                      </p>\n                    )}\n                  </div>\n                )}\n\n                {blocks.map((block, index) => {\n                  const blockDef = availableBlocks.find(b => b.id === block.type);\n                  const IconComponent = blockIcons[block.type] || Layout;\n                  \n                  return (\n                    <div\n                      key={block.id}\n                      className=\"bg-white border border-gray-200 rounded-lg p-6 group relative hover:shadow-md transition-shadow\"\n                    >\n                      {/* Block Header */}\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <div className=\"flex items-center space-x-3\">\n                          <div className=\"p-1 rounded hover:bg-gray-100\">\n                            <Move className=\"h-4 w-4 text-gray-400\" />\n                          </div>\n                          <IconComponent className=\"h-5 w-5\" style={{ color: colorScheme.primary }} />\n                          <div>\n                            <h4 className=\"font-medium text-gray-900\">{blockDef?.name || block.type}</h4>\n                            <p className=\"text-sm text-gray-600\">{blockDef?.description}</p>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center space-x-2 opacity-0 group-hover:opacity-100 transition-opacity\">\n                          <button\n                            onClick={() => editBlock(block)}\n                            className=\"p-2 text-gray-400 hover:text-gray-600 rounded\"\n                          >\n                            <Edit className=\"h-4 w-4\" />\n                          </button>\n                          <button\n                            onClick={() => removeBlock(block.id)}\n                            className=\"p-2 text-gray-400 hover:text-red-600 rounded\"\n                          >\n                            <Trash2 className=\"h-4 w-4\" />\n                          </button>\n                        </div>\n                      </div>\n\n                      {/* Block Preview */}\n                      <div className=\"border border-gray-100 rounded-lg p-4 bg-gray-50\">\n                        <BlockPreview\n                          blockType={block.type}\n                          config={block.config}\n                          theme={selectedTheme}\n                        />\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </>\n        )}\n\n        {/* Preview Mode */}\n        {previewMode && (\n          <div className=\"flex-1 bg-white\">\n            <div className=\"max-w-6xl mx-auto\">\n              {blocks.map((block) => (\n                <BlockPreview\n                  key={block.id}\n                  blockType={block.type}\n                  config={block.config}\n                  theme={selectedTheme}\n                  fullWidth\n                />\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Block Editor Modal */}\n      {editingBlock && (\n        <BlockEditor\n          block={editingBlock}\n          blockDefinition={availableBlocks.find(b => b.id === editingBlock.type)}\n          onSave={(config) => saveBlockConfig(editingBlock.id, config)}\n          onCancel={() => setEditingBlock(null)}\n        />\n      )}\n    </div>\n  );\n};\n\n// Enhanced Block Preview Component\nconst BlockPreview = ({ blockType, config, theme, fullWidth = false }) => {\n  const getPreviewContent = () => {\n    switch (blockType) {\n      case 'coworking_hero':\n        return (\n          <div className={`text-center py-12 ${fullWidth ? 'bg-blue-600 text-white' : 'bg-blue-100'}`}>\n            <h1 className=\"text-3xl font-bold mb-4\">{config.title || 'Where Innovation Meets Community'}</h1>\n            <p className=\"text-lg mb-6\">{config.subtitle || 'Join our vibrant coworking community'}</p>\n            <button className=\"px-6 py-3 bg-white text-blue-600 rounded-lg font-medium\">\n              {config.cta_text || 'Tour Our Space'}\n            </button>\n          </div>\n        );\n      \n      case 'membership_pricing':\n        const plans = config.plans || [\n          { name: 'Hot Desk', price: 25, billing: 'per day', features: ['Access to all spaces', 'Community events', 'Fast WiFi'] },\n          { name: 'Dedicated Desk', price: 200, billing: 'per month', features: ['Your own desk', 'Storage', '24/7 access'], is_popular: true },\n          { name: 'Private Office', price: 500, billing: 'per month', features: ['Private space', 'Meeting room access', 'Phone booth'] }\n        ];\n        \n        return (\n          <div className=\"py-8\">\n            <h2 className=\"text-2xl font-bold text-center mb-8\">{config.title || 'Choose Your Membership'}</h2>\n            <p className=\"text-center text-gray-600 mb-8\">{config.subtitle || 'Flexible plans for every type of professional'}</p>\n            <div className=\"grid md:grid-cols-3 gap-6\">\n              {plans.map((plan, idx) => (\n                <div key={idx} className={`border rounded-lg p-6 text-center relative ${\n                  plan.is_popular ? 'border-blue-500 bg-blue-50' : 'border-gray-200'\n                }`}>\n                  {plan.is_popular && (\n                    <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2\">\n                      <span className=\"bg-blue-500 text-white px-3 py-1 rounded-full text-sm\">Popular</span>\n                    </div>\n                  )}\n                  <h3 className=\"font-bold text-lg mb-2\">{plan.name}</h3>\n                  <div className=\"text-3xl font-bold mb-2\">${plan.price}</div>\n                  <div className=\"text-gray-600 mb-4\">{plan.billing}</div>\n                  <ul className=\"text-sm text-gray-600 space-y-1\">\n                    {plan.features?.map((feature, fidx) => (\n                      <li key={fidx}>✓ {feature}</li>\n                    ))}\n                  </ul>\n                </div>\n              ))}\n            </div>\n          </div>\n        );\n      \n      case 'member_testimonials':\n        const testimonials = config.testimonials || [\n          { quote: \"This community has transformed how I work. The energy is incredible!\", author_name: \"Sarah Johnson\", author_title: \"Freelance Designer\", rating: 5 },\n          { quote: \"Best decision for my startup. Met amazing people and grew my network.\", author_name: \"Mike Chen\", author_title: \"Tech Entrepreneur\", rating: 5 }\n        ];\n        \n        return (\n          <div className=\"py-8\">\n            <h2 className=\"text-2xl font-bold text-center mb-8\">{config.title || 'What Our Members Say'}</h2>\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              {testimonials.map((testimonial, idx) => (\n                <div key={idx} className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                  <div className=\"flex mb-4\">\n                    {[...Array(testimonial.rating || 5)].map((_, i) => (\n                      <Star key={i} className=\"h-5 w-5 text-yellow-400 fill-current\" />\n                    ))}\n                  </div>\n                  <p className=\"text-gray-600 mb-4 italic\">\"{testimonial.quote}\"</p>\n                  <div>\n                    <p className=\"font-medium\">{testimonial.author_name}</p>\n                    <p className=\"text-sm text-gray-500\">{testimonial.author_title}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        );\n      \n      case 'space_gallery':\n        const spaces = config.spaces || [\n          { name: 'Open Workspace', description: 'Collaborative area perfect for networking', capacity: 50 },\n          { name: 'Private Offices', description: 'Quiet spaces for focused work', capacity: 4 },\n          { name: 'Meeting Rooms', description: 'Professional spaces for client meetings', capacity: 8 }\n        ];\n        \n        return (\n          <div className=\"py-8\">\n            <h2 className=\"text-2xl font-bold text-center mb-8\">{config.title || 'Explore Our Spaces'}</h2>\n            <div className=\"grid md:grid-cols-3 gap-6\">\n              {spaces.map((space, idx) => (\n                <div key={idx} className=\"border rounded-lg overflow-hidden\">\n                  <div className=\"h-48 bg-gradient-to-br from-gray-200 to-gray-300 flex items-center justify-center\">\n                    <ImageIcon className=\"h-12 w-12 text-gray-400\" />\n                  </div>\n                  <div className=\"p-4\">\n                    <h3 className=\"font-medium mb-2\">{space.name}</h3>\n                    <p className=\"text-gray-600 text-sm mb-2\">{space.description}</p>\n                    {space.capacity && (\n                      <p className=\"text-xs text-gray-500\">Capacity: {space.capacity} people</p>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        );\n\n      case 'community_events':\n        return (\n          <div className=\"py-8\">\n            <h2 className=\"text-2xl font-bold text-center mb-8\">{config.title || 'Upcoming Events'}</h2>\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              {[1, 2, 3, 4].map(idx => (\n                <div key={idx} className=\"border rounded-lg p-4\">\n                  <div className=\"flex items-start space-x-4\">\n                    <div className=\"text-center\">\n                      <div className=\"text-2xl font-bold text-blue-600\">15</div>\n                      <div className=\"text-sm text-gray-500\">MAR</div>\n                    </div>\n                    <div>\n                      <h3 className=\"font-medium\">Networking Breakfast</h3>\n                      <p className=\"text-sm text-gray-600\">Connect with fellow entrepreneurs</p>\n                      <p className=\"text-xs text-gray-500 mt-2\">9:00 AM - 10:30 AM</p>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        );\n\n      case 'amenities_grid':\n        const amenities = config.amenities || [\n          { name: 'High-Speed WiFi', description: 'Enterprise-grade internet', icon: 'wifi' },\n          { name: 'Coffee Bar', description: 'Unlimited premium coffee', icon: 'coffee' },\n          { name: 'Meeting Rooms', description: 'Bookable conference spaces', icon: 'users' },\n          { name: 'Printing Services', description: 'Color and B&W printing', icon: 'printer' }\n        ];\n        \n        return (\n          <div className=\"py-8\">\n            <h2 className=\"text-2xl font-bold text-center mb-8\">{config.title || 'Member Amenities'}</h2>\n            <div className=\"grid md:grid-cols-4 gap-6\">\n              {amenities.map((amenity, idx) => (\n                <div key={idx} className=\"text-center p-4\">\n                  <div className=\"w-12 h-12 bg-blue-100 rounded-lg mx-auto mb-4 flex items-center justify-center\">\n                    <Layout className=\"h-6 w-6 text-blue-600\" />\n                  </div>\n                  <h3 className=\"font-medium mb-2\">{amenity.name}</h3>\n                  <p className=\"text-sm text-gray-600\">{amenity.description}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        );\n\n      case 'community_stats':\n        const stats = config.stats || [\n          { number: '500+', label: 'Active Members' },\n          { number: '50+', label: 'Events Monthly' },\n          { number: '24/7', label: 'Access' },\n          { number: '99%', label: 'Satisfaction' }\n        ];\n        \n        return (\n          <div className=\"py-8 bg-gray-50\">\n            <h2 className=\"text-2xl font-bold text-center mb-8\">{config.title || 'Our Growing Community'}</h2>\n            <div className=\"grid md:grid-cols-4 gap-6 text-center\">\n              {stats.map((stat, idx) => (\n                <div key={idx}>\n                  <div className=\"text-3xl font-bold text-blue-600 mb-2\">{stat.number}</div>\n                  <div className=\"text-gray-600\">{stat.label}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n        );\n\n      case 'cta_membership':\n        return (\n          <div className=\"py-12 bg-blue-600 text-white text-center\">\n            <h2 className=\"text-3xl font-bold mb-4\">{config.title || 'Ready to Join Our Community?'}</h2>\n            <p className=\"text-xl mb-8\">{config.subtitle || 'Start your journey with a free day pass'}</p>\n            <div className=\"space-x-4\">\n              <button className=\"px-6 py-3 bg-white text-blue-600 rounded-lg font-medium\">\n                {config.primary_cta || 'Get Day Pass'}\n              </button>\n              <button className=\"px-6 py-3 border border-white text-white rounded-lg font-medium\">\n                {config.secondary_cta || 'Schedule Tour'}\n              </button>\n            </div>\n          </div>\n        );\n      \n      default:\n        return (\n          <div className=\"py-8 text-center\">\n            <h3 className=\"font-medium text-gray-900 mb-2\">{blockType.replace('_', ' ').toUpperCase()}</h3>\n            <p className=\"text-gray-600\">Block preview will render here</p>\n          </div>\n        );\n    }\n  };\n\n  return <div className={fullWidth ? 'w-full' : ''}>{getPreviewContent()}</div>;\n};\n\n// Enhanced Block Editor Modal Component\nconst BlockEditor = ({ block, blockDefinition, onSave, onCancel }) => {\n  const [config, setConfig] = useState(block.config || {});\n\n  const handleFieldChange = (fieldName, value) => {\n    setConfig(prev => ({\n      ...prev,\n      [fieldName]: value\n    }));\n  };\n\n  const handleRepeaterChange = (fieldName, items) => {\n    setConfig(prev => ({\n      ...prev,\n      [fieldName]: items\n    }));\n  };\n\n  const handleSave = () => {\n    onSave(config);\n  };\n\n  const renderField = (field) => {\n    const value = config[field.field] || field.default || '';\n\n    switch (field.type) {\n      case 'text':\n        return (\n          <input\n            type=\"text\"\n            value={value}\n            onChange={(e) => handleFieldChange(field.field, e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            placeholder={field.default}\n          />\n        );\n\n      case 'textarea':\n        return (\n          <textarea\n            rows={4}\n            value={value}\n            onChange={(e) => handleFieldChange(field.field, e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            placeholder={field.default}\n          />\n        );\n\n      case 'select':\n        return (\n          <select\n            value={value}\n            onChange={(e) => handleFieldChange(field.field, e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          >\n            <option value=\"\">Select...</option>\n            {field.options?.map(option => (\n              <option key={option} value={option}>{option}</option>\n            ))}\n          </select>\n        );\n\n      case 'number':\n        return (\n          <input\n            type=\"number\"\n            value={value}\n            min={field.min}\n            max={field.max}\n            onChange={(e) => handleFieldChange(field.field, parseInt(e.target.value) || 0)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          />\n        );\n\n      case 'boolean':\n        return (\n          <label className=\"flex items-center\">\n            <input\n              type=\"checkbox\"\n              checked={!!value}\n              onChange={(e) => handleFieldChange(field.field, e.target.checked)}\n              className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n            />\n            <span className=\"ml-2 text-sm text-gray-700\">Enable this option</span>\n          </label>\n        );\n\n      case 'repeater':\n        // Simple repeater implementation for plans, testimonials, etc.\n        const items = Array.isArray(value) ? value : [];\n        return (\n          <div className=\"space-y-3\">\n            {items.map((item, index) => (\n              <div key={index} className=\"p-3 border border-gray-200 rounded-lg\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"text-sm font-medium\">Item {index + 1}</span>\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      const newItems = items.filter((_, i) => i !== index);\n                      handleFieldChange(field.field, newItems);\n                    }}\n                    className=\"text-red-500 hover:text-red-700\"\n                  >\n                    <Trash2 className=\"h-4 w-4\" />\n                  </button>\n                </div>\n                {field.fields?.map(subField => (\n                  <div key={subField.field} className=\"mb-2\">\n                    <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n                      {subField.field.replace('_', ' ').toUpperCase()}\n                    </label>\n                    <input\n                      type={subField.type === 'number' ? 'number' : 'text'}\n                      value={item[subField.field] || ''}\n                      onChange={(e) => {\n                        const newItems = [...items];\n                        newItems[index] = {\n                          ...newItems[index],\n                          [subField.field]: subField.type === 'number' ? parseInt(e.target.value) || 0 : e.target.value\n                        };\n                        handleFieldChange(field.field, newItems);\n                      }}\n                      className=\"w-full px-2 py-1 text-xs border border-gray-300 rounded\"\n                      placeholder={subField.default}\n                    />\n                  </div>\n                ))}\n              </div>\n            ))}\n            <button\n              type=\"button\"\n              onClick={() => {\n                const newItem = {};\n                field.fields?.forEach(subField => {\n                  newItem[subField.field] = subField.default || '';\n                });\n                handleFieldChange(field.field, [...items, newItem]);\n              }}\n              className=\"w-full px-3 py-2 border-2 border-dashed border-gray-300 rounded-lg text-gray-600 hover:border-gray-400\"\n            >\n              <Plus className=\"h-4 w-4 inline mr-2\" />\n              Add Item\n            </button>\n          </div>\n        );\n\n      default:\n        return (\n          <input\n            type=\"text\"\n            value={value}\n            onChange={(e) => handleFieldChange(field.field, e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          />\n        );\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-4xl w-full mx-4 max-h-[80vh] overflow-y-auto\">\n        <div className=\"p-6 border-b border-gray-200\">\n          <h2 className=\"text-xl font-bold\">Edit {blockDefinition?.name || block.type}</h2>\n          <p className=\"text-gray-600 mt-1\">{blockDefinition?.description}</p>\n        </div>\n        \n        <div className=\"p-6 space-y-6\">\n          {blockDefinition?.customizable_fields?.map((field) => (\n            <div key={field.field}>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                {field.field.replace('_', ' ').toUpperCase()}\n                {field.required && <span className=\"text-red-500 ml-1\">*</span>}\n                {field.optional && <span className=\"text-gray-400 ml-1\">(optional)</span>}\n              </label>\n              {renderField(field)}\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"p-6 border-t border-gray-200 flex justify-end space-x-4\">\n          <button\n            onClick={onCancel}\n            className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleSave}\n            className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n          >\n            Save Changes\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CoworkingPageBuilder;"],"names":["BlockPreview","_ref2","blockType","config","theme","fullWidth","_jsx","className","children","getPreviewContent","_jsxs","concat","title","subtitle","cta_text","plans","name","price","billing","features","is_popular","map","plan","idx","_plan$features","feature","fidx","testimonials","quote","author_name","author_title","rating","testimonial","Array","_","i","Star","spaces","description","capacity","space","ImageIcon","amenities","icon","amenity","Layout","stats","number","label","stat","primary_cta","secondary_cta","replace","toUpperCase","BlockEditor","_ref3","_blockDefinition$cust","block","blockDefinition","onSave","onCancel","setConfig","useState","handleFieldChange","fieldName","value","prev","_objectSpread","renderField","field","_field$options","default","type","onChange","e","target","placeholder","rows","options","option","min","max","parseInt","checked","items","isArray","item","index","_field$fields","onClick","newItems","filter","Trash2","fields","subField","_field$fields2","newItem","forEach","Plus","customizable_fields","required","optional","handleSave","_ref","pageId","initialBlocks","getColorScheme","translateTerm","useTenant","blocks","setBlocks","availableBlocks","setAvailableBlocks","selectedTheme","setSelectedTheme","availableThemes","setAvailableThemes","pageTemplates","setPageTemplates","editingBlock","setEditingBlock","previewMode","setPreviewMode","saving","setSaving","loading","setLoading","error","setError","colorScheme","blockIcons","Target","BarChart3","Calendar","Users","useEffect","loadAllData","async","Promise","all","loadAvailableBlocks","loadAvailableThemes","loadPageTemplates","loadExistingPageData","err","console","response","api","get","data","themes","themesArray","length","templates","pageData","log","getDefaultBlockConfig","RefreshCw","style","color","primary","text","Eye","post","alert","disabled","backgroundColor","Save","_Fragment","template","_template$blocks","templateBlocks","templateBlock","id","Date","now","Math","random","toString","substr","find","b","order","applyTemplate","IconComponent","newBlock","Palette","color_schemes","slice","blockDef","Move","editBlock","Edit","removeBlock","blockId","saveBlockConfig","newConfig"],"sourceRoot":""}